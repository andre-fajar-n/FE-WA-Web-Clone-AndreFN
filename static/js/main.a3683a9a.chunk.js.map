{"version":3,"sources":["logo.svg","images/user.jpeg","components/ShowStatus.jsx","components/ListStatus.jsx","components/NavbarProfile.jsx","components/ListChat.jsx","store/action/chat.js","store/action/status.js","components/NavbarChat.jsx","components/Chat.jsx","components/ShowTabChat.jsx","store/action/user.js","pages/Home.jsx","pages/Login.jsx","pages/Register.jsx","store/reducer/user.js","store/reducer/chat.js","store/reducer/status.js","store/index.js","routes/MainRoutes.jsx","App.js","serviceWorker.js","index.js","images/whatsapp-icon-logo.png"],"names":["module","exports","ShowStatus","props","console","warn","username","Modal","dialogClassName","Navbar","className","Nav","Link","style","color","Carousel","allStatus","map","item","Item","src","require","alt","image","Caption","content","ListStatus","useState","showStatus","setStatus","handleCloseStatus","handleShowStatus","handleModal","listStatus","value","Row","Col","md","borderTop","onClick","all_status","backgroundColor","handleCloseListStatus","fontSize","NavbarProfile","showProfile","setShow","handleClose","showListStatus","setListStatus","logout","a","doLogout","history","push","position","width","left","right","zIndex","height","show","onHide","Header","Body","localStorage","getItem","OverlayTrigger","trigger","placement","overlay","Popover","id","Content","Form","Group","Control","type","placeholder","borderRadius","autoFocus","moment","ListChat","info_chat","name","lastChat","last_chat","message","dateChat","parseInt","utc","created_at","format","dateNow","showLastChat","eventKey","padding","display","justifyContent","user_id","Dropdown","Toggle","as","Menu","url","process","NavbarChat","borderLeft","RandomColor","i","Math","floor","random","dateBefore","Chat","showDate","changeDate","deleteMessage","replace","getConversation","to","undefined","user","group_chat_id","fontWeight","ShowTabChat","Tab","Pane","all_chat","index","key","onSubmit","e","preventDefault","margin","sm","textAlign","onChange","changeInputMessage","postAfterSendMessage","changeInputUser","event","payload","Home","componentDidMount","getAllMessage","getStatus","scrollBottom","sendMessage","inputReset","document","getElementById","autoBottom","scrollTop","scrollHeight","listAllMessage","this","Container","defaultActiveKey","marginLeft","marginRight","variant","marginTop","borderBottom","pathname","Component","mapDispatchToProps","dispatch","getState","baseUrl","params","chat","user2_id","axios","method","headers","error","get","response","data","removeItem","getUserStatus","connect","state","dataUser","status","userStatus","Login","postLogin","doLogin","maxWidth","controlId","Label","column","Button","dataPhoneNumber","loginPhoneNumber","dataPassword","loginPassword","phone_number","password","setItem","token","then","responseUser","catch","alert","Register","postRegister","register","dataUsername","registerUsername","registerPhoneNumber","registerPassword","bodyRequest","post","log","initialStateUser","biodata","isLogin","initialChat","initialStatus","rootReducer","combineReducers","userState","action","target","chatState","statusState","store","createStore","applyMiddleware","thunk","subscribe","MainRoutes","exact","path","component","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","URL","href","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a3683a9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.498d600c.jpeg\";","import React, { Fragment } from \"react\"\nimport Modal from \"react-bootstrap/Modal\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Carousel from 'react-bootstrap/Carousel'\n\nconst ShowStatus = (props) => {\n  console.warn(\"cek show status\", props['item'][`handle_modal_${props.username}`]['handleCloseStatus'])\n  return (\n    <Fragment>\n      <Modal\n        dialogClassName=\"modal-show-status\"\n      // show={props['item'][`handle_modal_${props.username}`]['showStatus']}\n      // onHide={props['item'][`handle_modal${props.username}`]['handleCloseStatus']}\n      >\n        <Navbar className=\"navbar-show-status\">\n          <Nav.Link style={{ color: \"#ffffff\" }}\n          // onClick={props['item'][`handle_modal${props.username}`]['handleCloseStatus']}\n          >\n            <i className=\"fas fa-arrow-left\"></i>\n          </Nav.Link>\n          <Nav.Link style={{ color: \"#ffffff\" }}\n            className=\"ml-auto\"\n          // onClick={props['item'][`handle_modal${props.username}`]['handleCloseStatus'], props.handleCloseListStatus}\n          >\n            <i className=\"fas fa-times\"></i>\n          </Nav.Link>\n        </Navbar>\n        <Carousel className=\"each-status\">\n          {props.allStatus.map((item) => (\n            // <Fragment>\n            <Carousel.Item>\n              {/* {item.image === \"\" || item.image === null ? (\n                  <Fragment></Fragment>\n                ) : (\n                  )} */}\n              <img\n                className=\"d-block\"\n                src={require(\"../logo.svg\")}\n                alt={`${item.image}`}\n              />\n              <Carousel.Caption>\n                <h3>{props.username}</h3>\n                <p>{item.content}</p>\n              </Carousel.Caption>\n            </Carousel.Item>\n            // </Fragment>\n          ))}\n          {/* <Carousel.Item>\n            <img\n              className=\"d-block\"\n              src={require(\"../logo.svg\")}\n              alt=\"Third slide\"\n            />\n\n            <Carousel.Caption>\n              <h3>Second slide label</h3>\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n            </Carousel.Caption>\n          </Carousel.Item>\n          <Carousel.Item>\n            <img\n              className=\"d-block\"\n              src={require(\"../logo.svg\")}\n              alt=\"Third slide\"\n            />\n\n            <Carousel.Caption>\n              <h3>Third slide label</h3>\n              <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n            </Carousel.Caption>\n          </Carousel.Item> */}\n        </Carousel>\n      </Modal>\n    </Fragment >\n  )\n}\n\nexport default ShowStatus;","import React, { useState, Fragment } from \"react\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport { Link } from \"react-router-dom\"\nimport ShowStatus from \"./ShowStatus\"\nimport Navbar from \"react-bootstrap/Navbar\"\nimport Nav from \"react-bootstrap/Nav\"\n\nconst ListStatus = (props) => {\n  const [showStatus, setStatus] = useState(false)\n  const handleCloseStatus = () => setStatus(false);\n  const handleShowStatus = () => setStatus(true);\n\n  const handleModal = props.listStatus.map((value) => {\n    value[`handle_modal_${value.username}`] = {\n      showStatus,\n      handleShowStatus,\n      handleCloseStatus\n    }\n    return value\n  })\n  console.warn('cek handle modal', handleModal)\n  return (\n    <Row className=\"m-0\">\n      <Col md={4} className=\"p-0 header-status\" >\n        <Row className=\"m-0 navbar-status\">\n\n          <Col md={2} className=\"p-0\">\n            <i className=\"fas fa-user-circle\"></i>\n          </Col>\n\n          <Col md={\"auto\"} className=\"p-0\">\n            <div>My Status</div>\n            <div style={{ color: \"hsla(0,0%,100%,0.55)\" }}>Update Status</div>\n          </Col>\n        </Row>\n        <div className=\"list-status\">\n          <hr style={{ borderTop: \"1px solid hsla(0,0%,100%,0.55)\" }} />\n          <span style={{ color: \"hsla(0,0%,100%,0.55)\" }}>Recent</span>\n          {handleModal.map((item) => (\n            <Fragment>\n\n              {/* start list status */}\n              <Link onClick={item[`handle_modal_${item.username}`]['handleShowStatus']} style={{ color: \"hsla(0,0%,100%,0.55)\" }}>\n                <Row>\n                  <Col md={2} className=\"p-0\">\n                    <img className=\"avatar\" src={require(\"../images/user.jpeg\")} alt=\"\" />\n                  </Col>\n                  <Col md={\"auto\"} className=\"p-0\">\n                    <div style={{ color: \"#ffffff\" }}>{item.username}</div>\n                    <div>status</div>\n                  </Col>\n                </Row>\n              </Link>\n              {/* end list status */}\n\n              {/* start modal show status */}\n              <ShowStatus\n                username={item.username}\n                item={item}\n                allStatus={item.all_status}\n              // handleCloseStatus={handleCloseStatus}\n              // handleCloseListStatus={props.handleCloseListStatus}\n              // showStatus={showStatus}\n              />\n              {/* end modal show status */}\n\n            </Fragment>\n          ))}\n        </div>\n      </Col>\n      <Col md={8} className=\"p-0\" style={{ backgroundColor: \"#000000\", color: \"hsla(0,0%,100%,0.55)\" }}>\n\n        {/* start tombol close modal status */}\n        <Navbar className=\"close-status\">\n          <Nav.Link className=\"ml-auto\" style={{ color: \"#ffffff\" }} onClick={props.handleCloseListStatus}>\n            <i className=\"fas fa-times\"></i>\n          </Nav.Link>\n        </Navbar>\n        {/* end tombol close modal status */}\n\n        <div className=\"blank-status\">\n          <i style={{ fontSize: \"50vh\" }} className=\"fas fa-circle-notch\"></i><br />\n          <span>Click on contact to view their status updates</span>\n        </div>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ListStatus;","import React from \"react\"\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Form from 'react-bootstrap/Form'\nimport Modal from 'react-bootstrap/Modal'\nimport { useState } from \"react\"\nimport { Link, } from \"react-router-dom\"\nimport ListStatus from \"./ListStatus\"\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover'\n// import Dropdown from \"react-bootstrap/Dropdown\"\n\nconst NavbarProfile = (props) => {\n  const [showProfile, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const [showListStatus, setListStatus] = useState(false)\n  const handleCloseListStatus = () => setListStatus(false);\n  const handleShowListStatus = () => setListStatus(true);\n\n  // logout\n  const logout = async () => {\n    await props.doLogout()\n    props.history.push(\"/login\")\n  }\n  return (\n    <div style={{ position: \"fixed\", width: `${(4 / 12 * 100)}%`, left: \"0\", right: `${4 / 12 * 100}%`, zIndex: \"999\" }}>\n      <Navbar style={{ backgroundColor: \"#ededed\", height: \"64px\" }} className=\"p-0\">\n\n        {/* tombol profile */}\n        <Nav.Link className=\"mr-auto\" onClick={handleShow}>\n          <i style={{ fontSize: \"30px\" }} md={2} className=\"fas fa-user-circle\"></i>\n        </Nav.Link>\n\n        {/* start modal profile */}\n        <Modal dialogClassName=\"modal-profile\" show={showProfile} onHide={handleClose}>\n          <Modal.Header className=\"header-profile\">\n            <Link style={{ color: \"#ffffff\" }} onClick={handleClose}>\n              <i className=\"fas fa-arrow-left\"></i>\n            </Link>\n            <div>Profile</div>\n          </Modal.Header>\n          <Modal.Body className=\"p-0 body-profile\">\n            <div style={{ backgroundColor: \"#ededed\" }}>Profile Picture</div>\n            <div>{localStorage.getItem(\"username\")}</div>\n            <div style={{ backgroundColor: \"#ededed\" }}>This is not your username or pin. This name will be visible to your Whatsapp contacts</div>\n            <div>about</div>\n          </Modal.Body>\n        </Modal>\n        {/* end modal profile */}\n\n        {/* start navbar status, new chat, setting */}\n        <Nav className=\"ml-auto\" style={{ color: \"black\" }}>\n          {/* status */}\n          <Nav.Link onClick={handleShowListStatus}>\n            <i style={{ fontSize: \"20px\" }} className=\"fas fa-circle-notch\"></i>\n          </Nav.Link>\n\n          {/* start modal list status */}\n          <Modal dialogClassName=\"modal-status\" show={showListStatus} onHide={handleCloseListStatus}>\n            <ListStatus\n              listStatus={props.listStatus}\n              handleCloseListStatus={handleCloseListStatus} />\n          </Modal>\n          {/* end modal list status */}\n\n          {/* new chat */}\n          <Nav.Link>\n            <i style={{ fontSize: \"20px\" }} className=\"fas fa-comment-dots\"></i>\n          </Nav.Link>\n\n          {/* setting */}\n          <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={(\n            <Popover id=\"popover-positioned-bottom\">\n              <Popover.Content>\n                New Group\n            </Popover.Content>\n              <Popover.Content>\n                Profile\n            </Popover.Content>\n              <Popover.Content>\n                Archieved\n            </Popover.Content>\n              <Popover.Content>\n                Starred\n            </Popover.Content>\n              <Popover.Content>\n                Settings\n            </Popover.Content>\n              <Popover.Content onClick={() => logout()}>\n                Log Out\n            </Popover.Content>\n            </Popover>\n          )}>\n            <Nav.Link>\n              <i style={{ fontSize: \"20px\" }} className=\"fas fa-ellipsis-v\"></i>\n            </Nav.Link>\n          </OverlayTrigger>\n\n          {/* <Dropdown>\n            <Dropdown.Toggle as=\"span\">\n              <i style={{ fontSize: \"20px\" }} className=\"fas fa-ellipsis-v\"></i>\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              <Dropdown.Item>\n                New Group\n                </Dropdown.Item>\n              <Dropdown.Item>\n                Profile\n                </Dropdown.Item>\n              <Dropdown.Item>\n                Archieved\n                </Dropdown.Item>\n              <Dropdown.Item>\n                Starred\n                </Dropdown.Item>\n              <Dropdown.Item>\n                Settings\n                </Dropdown.Item>\n              <Dropdown.Item onClick={() => logout()}>\n                Log Out\n                </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown> */}\n\n        </Nav>\n        {/* end navbar status, new chat, setting */}\n\n      </Navbar>\n\n      {/* input search chat/friend */}\n      <Form.Group className=\"p-2 m-0\" style={{ backgroundColor: \"#f7f7f7\" }}>\n        <Form.Control type=\"text\" placeholder=\"Search or start new chat\" style={{ borderRadius: \"50px\" }} autoFocus></Form.Control>\n      </Form.Group>\n    </div>\n  )\n}\n\nexport default NavbarProfile;","import React, { Fragment } from \"react\"\nimport Nav from \"react-bootstrap/Nav\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Dropdown from \"react-bootstrap/Dropdown\"\n\nconst moment = require('moment')\n\nconst ListChat = (props) => {\n  let username = \"\"\n  if (typeof (props.value.info_chat.username) == \"string\") {\n    username = props.value.info_chat.username\n  } else {\n    username = props.value.info_chat.name\n  }\n  const lastChat = props.value.last_chat.message\n  const dateChat = parseInt(moment.utc(props.value.last_chat.created_at).format('D'))\n  const dateNow = parseInt(moment().format('D'))\n  let showLastChat = ''\n  if (dateNow - dateChat < 1) {\n    showLastChat = moment.utc(props.value.last_chat.created_at).format('HH:mm')\n  } else if (dateNow - dateChat === 1) {\n    showLastChat = \"Yesterday\"\n  } else if (dateNow - dateChat < 8) {\n    showLastChat = moment.utc(props.value.last_chat.created_at).format('dddd')\n  } else {\n    showLastChat = moment.utc(props.value.last_chat.created_at).format('DD/M/YYYY')\n  }\n  return (\n    <div>\n      <Nav.Link eventKey={`${username}`} style={{ width: \"100%\", padding: \"10px 0\" }} >\n        <Row className=\"m-0\">\n          <Col md={2}><i className=\"fas fa-user-circle\"></i></Col>\n          <Col md={10} className=\"p-0\">\n            <Row className=\"m-0\">\n              <Col className=\"p-0\">{username}</Col>\n              <Col className=\"p-0\" style={{ display: \"flex\", justifyContent: \"end\" }}>{showLastChat}</Col>\n            </Row>\n            <Row className=\"m-0\">\n              <Col className=\"p-0\">\n                {localStorage.getItem(\"id_user\") === props.value.last_chat.user_id ? (\n                  <i className=\"fas fa-check\"></i>\n                ) : (\n                    <Fragment></Fragment>\n                  )}\n                {lastChat}\n              </Col>\n              <Col className=\"p-0\" style={{ display: \"flex\", justifyContent: \"end\" }}>\n                {/* <i className=\"fas fa-chevron-down\"></i> */}\n\n                <Dropdown>\n                  <Dropdown.Toggle as=\"span\">\n                    <i className=\"fas fa-chevron-down\"></i>\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu>\n                    <Dropdown.Item>\n                      Archieve chat\n                    </Dropdown.Item>\n                    <Dropdown.Item>\n                      Mute notifications\n                    </Dropdown.Item>\n                    <Dropdown.Item>\n                      Delete chat\n                    </Dropdown.Item>\n                    <Dropdown.Item>\n                      Pin chat\n                    </Dropdown.Item>\n                    <Dropdown.Item>\n                      Mark as unread\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Nav.Link>\n      {/* <hr /> */}\n    </div>\n  )\n}\n\nexport default ListChat;","import axios from \"axios\"\n\nconst url = process.env.REACT_APP_BASE_URL\n\nexport const changeInputMessage = (event) => ({\n  type: \"CHANGE_INPUT_MESSAGE\",\n  payload: event\n})\n\nexport const sendMessage = (id, username) => {\n  return async (dispatch, getState) => {\n    let baseUrl = \"\"\n    let params = {}\n    if (username === undefined) {\n      baseUrl = url + \"message_group\"\n      params = {\n        group_chat_id: id,\n        message: getState().chat.message\n      }\n    } else {\n      baseUrl = url + \"personal_message\"\n      params = {\n        user2_id: id,\n        message: getState().chat.message\n      }\n    }\n    try {\n      await axios({\n        method: \"POST\",\n        url: baseUrl,\n        params: params,\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\n      })\n    } catch (error) {\n      console.error(\"failed to send message\")\n    }\n  }\n}\n\nexport const deleteMessage = (id) => {\n  return async (dispatch, getState) => {\n    try {\n      await axios({\n        method: \"DELETE\",\n        url: `${url}personal_message/${id}`,\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\n      })\n    } catch (error) {\n      console.error(\"message cannot delete\")\n    }\n  }\n}\n\nexport const getAllMessage = () => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await axios.get(url + \"all_message\", {\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\n      })\n      dispatch({\n        type: \"GET_ALL_MESSAGE\",\n        payload: response.data\n      })\n    } catch (error) {\n      console.error(\"message not found\")\n    }\n  }\n}","import axios from \"axios\"\n\nconst url = process.env.REACT_APP_BASE_URL\n\nexport const getStatus = () => {\n  return async (dispatch) => {\n    try {\n      const response = await axios.get(url + \"status\", {\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\n      })\n      dispatch({\n        type: \"GET_STATUS\",\n        payload: response.data\n      })\n    } catch (error) {\n      console.error(\"cannot get status\")\n    }\n  }\n}\n\nexport const getUserStatus = (id) => {\n  return async (dispatch) => {\n    try {\n      const response = await axios.get(url + \"status/\" + id, {\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\n      })\n      dispatch({\n        type: \"GET_USER_STATUS\",\n        payload: response.data\n      })\n    } catch (error) {\n      console.error(\"cannot get user status\")\n    }\n  }\n}","import React from \"react\"\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nconst NavbarChat = (props) => {\n  let username = \"\"\n  if (typeof (props.item.info_chat.username) == \"string\") {\n    username = props.item.info_chat.username\n  } else {\n    username = props.item.info_chat.name\n  }\n  return (\n    <Navbar id=\"navbar-chat\"\n      style={{ width: `${8 / 12 * 100}%`, left: `${4 / 12 * 100}%`, borderLeft: \"1px solid rgba(155, 154, 154, 0.5)\" }}\n      className=\"p-0\">\n      <Nav.Link className=\"mr-auto\">\n        <Row>\n          <Col md={2}><i className=\"fas fa-user-circle\"></i></Col>\n          <Col md={\"auto\"}>\n            <div>{username}</div>\n            <div>Last seen</div>\n          </Col>\n        </Row>\n      </Nav.Link>\n      <Nav className=\"ml-auto\" style={{ color: \"black\" }}>\n        <Nav.Link><i style={{ fontSize: \"20px\" }} className=\"fas fa-search\"></i></Nav.Link>\n        <Nav.Link><i style={{ fontSize: \"20px\" }} className=\"fas fa-paperclip\"></i></Nav.Link>\n        <Nav.Link><i style={{ fontSize: \"20px\" }} className=\"fas fa-ellipsis-v\"></i></Nav.Link>\n      </Nav>\n    </Navbar>\n  )\n}\n\nexport default NavbarChat;","import React, { Fragment } from \"react\"\nimport Dropdown from 'react-bootstrap/Dropdown'\n\nconst moment = require('moment')\n\nconst RandomColor = () => {\n  const hexadecimal = '123456789abcdef'\n  let color = '#'\n  for (let i = 0; i < 6; i++) {\n    color += hexadecimal[Math.floor(Math.random() * 16)]\n  }\n  return color\n}\n\nlet dateBefore = ''\n\nconst Chat = (props) => {\n  // cek jika tanggal created_at sudah ganti, update variabel 'showDate'\n  let showDate = moment.utc(props.value.created_at).format('D MMM YYYY')\n  let changeDate = true\n  if (dateBefore === '') {\n    changeDate = true\n    dateBefore = showDate\n  } else {\n    if (dateBefore === showDate) {\n      changeDate = false\n    } else {\n      dateBefore = showDate\n      changeDate = true\n    }\n  }\n\n  // memilih tampilan 'showDate' berdasarkan sudah berapa lama dari hari ini\n  const dateNow = parseInt(moment().format('D'))\n  const dateChat = parseInt(moment.utc(props.value.created_at).format('D'))\n  if (dateNow - dateChat === 0) {\n    showDate = 'Today'\n  } else if (dateNow - dateChat === 1) {\n    showDate = \"Yesterday\"\n  } else {\n    showDate = moment.utc(props.value.created_at).format('D MMM YYYY')\n  }\n\n  // delete message\n  const deleteMessage = async (id) => {\n    await props.deleteMessage(id)\n    await props.history.replace('/')\n    await props.getConversation()\n  }\n  console.warn(\"cek chat\", moment().to(dateChat, 'hours'), dateChat)\n  return (\n    <Fragment>\n      {changeDate ? (\n        <div id=\"date-chat\" className=\"m-auto\">{showDate}</div>\n      ) : (\n          <Fragment></Fragment>\n        )}\n      <Dropdown>\n        {props.value.user === undefined ? (\n          <div id=\"user-chat\" style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <div>{props.value.message}</div>\n            <div className=\"time-chat\">{moment.utc(props.value.created_at).format('HH:mm')}</div>\n            <Dropdown className=\"button-chat\">\n              <Dropdown.Toggle as=\"span\">\n                <i className=\"fas fa-chevron-down\"></i>\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu>\n                <Dropdown.Item>\n                  Reply\n                </Dropdown.Item>\n                <Dropdown.Item>\n                  Forward message\n                </Dropdown.Item>\n                <Dropdown.Item>\n                  Starred message\n                </Dropdown.Item>\n                <Dropdown.Item>\n                  <div onClick={() => deleteMessage(props.value.id)}>Delete message</div>\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </div>\n        ) : (\n            <div id=\"friend-chat\">\n              {props.item.group_chat_id === undefined ? (\n                <Fragment></Fragment>\n              ) : (\n                  <div style={{ color: `${RandomColor()}`, fontWeight: \"bold\" }}>{props.value.user.username}</div>\n                )}\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>{props.value.message}</div>\n                <div style={{ display: \"flex\" }}>\n                  <div className=\"time-chat\">{moment.utc(props.value.created_at).format('HH:mm')}</div>\n                  <Dropdown className=\"button-chat\">\n                    <Dropdown.Toggle as=\"span\">\n                      <i className=\"fas fa-chevron-down\"></i>\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                      <Dropdown.Item>\n                        Reply\n                      </Dropdown.Item>\n                      <Dropdown.Item>\n                        Forward message\n                      </Dropdown.Item>\n                      <Dropdown.Item>\n                        Starred message\n                      </Dropdown.Item>\n                      <Dropdown.Item>\n                        <div onClick={() => deleteMessage(props.value.id)}>Delete message</div>\n                      </Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </div>\n              </div>\n            </div>\n          )}\n      </Dropdown>\n    </Fragment>\n  )\n}\n\nexport default Chat;","import React from \"react\"\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport NavbarChat from \"../components/NavbarChat\"\nimport Form from \"react-bootstrap/Form\"\nimport Tab from 'react-bootstrap/Tab'\nimport Chat from \"./Chat\"\n\nconst ShowTabChat = (props) => {\n  let username = ''\n  if (typeof (props.item.info_chat.username) == \"string\") {\n    username = props.item.info_chat.username\n  } else {\n    username = props.item.info_chat.name\n  }\n  return (\n    <Tab.Pane eventKey={`${username}`}>\n      <NavbarChat item={props.item} />\n\n      {/* (start) menampilkan isi chat */}\n      <div id=\"box-chat\">\n        {props.item.all_chat.map((value, index) => (\n          <Chat\n            key={index}\n            {...props}\n            value={value} />\n        ))}\n      </div>\n      {/* (end) menampilkan isi chat */}\n\n      <Form.Group\n        onSubmit={(e) => e.preventDefault()}\n        style={{ backgroundColor: \"#f7f7f7\", padding: \"10px 0\", margin: \"0 0 0 5px\", width: \"911px\" }}>\n        <Row style={{ margin: \"0\" }}>\n          <Col sm={1} className=\"p-0 m-auto\" style={{ textAlign: \"center\" }}>\n            <i className=\"far fa-grin\" style={{ fontSize: \"30px\" }}></i>\n          </Col>\n          <Col sm={9} className=\"p-0\">\n            <Form.Control\n              onChange={(e) => props.changeInputMessage(e)}\n              name=\"message\"\n              type=\"text\"\n              id=\"sendMessage\"\n              placeholder=\"Type a message\"\n              style={{ borderRadius: \"50px\" }}>\n            </Form.Control>\n          </Col>\n          <Col sm={1} className=\"p-0 m-auto\" style={{ textAlign: \"center\" }}>\n            <i onClick={() => props.postAfterSendMessage(props.item.info_chat.id, props.item.info_chat.username)} className=\"far fa-paper-plane\" style={{ fontSize: \"30px\" }}></i>\n          </Col>\n          <Col sm={1} className=\"p-0 m-auto\" style={{ textAlign: \"center\" }}>\n            <i className=\"fas fa-microphone\" style={{ fontSize: \"30px\" }}></i>\n          </Col>\n        </Row>\n      </Form.Group>\n    </Tab.Pane>\n  )\n}\n\nexport default ShowTabChat;","import axios from \"axios\"\n\nconst url = process.env.REACT_APP_BASE_URL\n\nexport const changeInputUser = (event) => ({\n  type: \"CHANGE_INPUT_USER\",\n  payload: event\n})\n\nexport const doLogin = () => {\n  return async (dispatch, getState) => {\n    const dataPhoneNumber = getState().user.loginPhoneNumber\n    const dataPassword = getState().user.loginPassword\n\n    try {\n      const response = await axios.get(url + \"login\",\n        {\n          params: {\n            phone_number: dataPhoneNumber,\n            password: dataPassword\n          }\n        })\n\n      localStorage.setItem(\"token\", response.data.token)\n      // start get biodata user\n      await axios.get(url + \"user\", {\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\n      })\n        .then((responseUser) => {\n          localStorage.setItem(\"id_user\", responseUser.data.id)\n          localStorage.setItem(\"username\", responseUser.data.username)\n          localStorage.setItem(\"phone_number\", responseUser.data.phone_number)\n        })\n        .catch((error) => {\n          alert(\"Data tidak ditemukan\")\n        })\n      // end get biodata user\n\n    } catch (error) {\n      alert(\"Anda belum terdaftar. Silahkan daftar terlebih dahulu!\")\n    }\n  }\n}\n\nexport const register = () => {\n  return async (dispatch, getState) => {\n    const dataUsername = getState().user.registerUsername\n    const dataPhoneNumber = getState().user.registerPhoneNumber\n    const dataPassword = getState().user.registerPassword\n    const bodyRequest = {\n      username: dataUsername,\n      phone_number: dataPhoneNumber,\n      password: dataPassword\n    }\n    try {\n      const response = await axios.post(url + \"user\", bodyRequest)\n      console.log(response)\n\n      // start login\n      try {\n        const response = await axios.get(url + \"login\",\n          {\n            params: {\n              phone_number: dataPhoneNumber,\n              password: dataPassword\n            }\n          })\n        localStorage.setItem(\"token\", response.data.token)\n\n        // start get biodata user\n        await axios.get(url + \"user\", {\n          headers: { 'Authorization': 'Bearer ' + getState().user.token }\n        })\n          .then((responseUser) => {\n            localStorage.setItem(\"id_user\", responseUser.data.id)\n            localStorage.setItem(\"username\", responseUser.data.username)\n            localStorage.setItem(\"phone_number\", responseUser.data.phone_number)\n          })\n          .catch((error) => {\n            alert(\"Data tidak ditemukan\")\n          })\n        // end get biodata user\n\n      } catch (error) {\n        alert(\"Anda belum terdaftar. Silahkan daftar terlebih dahulu!\")\n      }\n      // end login\n\n    } catch (error) {\n      alert(\"Nomor sudah terdaftar\")\n    }\n  }\n}\n\nexport const doLogout = () => {\n  return async () => {\n    localStorage.removeItem(\"token\")\n    localStorage.removeItem(\"id_user\")\n    localStorage.removeItem(\"username\")\n    localStorage.removeItem(\"phone_number\")\n  }\n  // { type: \"DO_LOGOUT\" }\n}","import React, { Component, Fragment } from \"react\"\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport NavbarProfile from \"../components/NavbarProfile\"\nimport ListChat from \"../components/ListChat\"\nimport Nav from \"react-bootstrap/Nav\"\nimport Tab from 'react-bootstrap/Tab'\nimport { connect } from \"react-redux\"\nimport { Redirect } from \"react-router-dom\"\nimport { sendMessage, changeInputMessage, deleteMessage, getAllMessage } from \"../store/action/chat\"\nimport { getStatus, getUserStatus } from \"../store/action/status\"\nimport ShowTabChat from \"../components/ShowTabChat\"\nimport { doLogout } from \"../store/action/user\"\n\nclass Home extends Component {\n  componentDidMount = async () => {\n    await this.props.getAllMessage()\n    await this.props.getStatus()\n\n    // posisi scroll chat auto dari bawah\n    this.scrollBottom()\n  }\n\n  postAfterSendMessage = async (id, username) => {\n    await this.props.sendMessage(id, username)\n    await this.props.history.replace('/')\n    await this.props.getAllMessage()\n\n    this.scrollBottom()\n    this.inputReset()\n  }\n\n  inputReset = () => {\n    const inputMessage = document.getElementById(\"sendMessage\")\n    inputMessage.value = \"\"\n  }\n\n  // fungsi auto scroll paling bawah\n  scrollBottom = () => {\n    const autoBottom = document.getElementById('box-chat')\n    if (autoBottom) {\n      autoBottom.scrollTop = autoBottom.scrollHeight\n    }\n  }\n\n  render() {\n    const listAllMessage = this.props.listAllMessage\n    return (\n      <Fragment >\n        {localStorage.getItem(\"token\") !== null ? (\n          <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n            <Row style={{ marginLeft: \"0\", marginRight: \"15px\" }}>\n              <Col sm={4} className=\"p-0\">\n                {/* header menu profile */}\n                <NavbarProfile\n                  // dataUser={this.props.dataUser}\n                  {...this.props}\n                  doLogout={this.props.doLogout}\n                  listStatus={this.props.listStatus} />\n\n                {/* (start) Menampilkan list chat */}\n                <Nav variant=\"pills\" className=\"flex-column\">\n                  <div id=\"box-list-chat\" style={{ marginTop: \"118px\" }}>\n                    {listAllMessage.map((value, id) => (\n                      <Nav.Item key={id} style={{ borderBottom: \"1px solid rgba(155, 154, 154, 0.5)\" }}>\n                        <ListChat value={value} />\n                      </Nav.Item>\n                    ))}\n                  </div>\n                </Nav>\n                {/* (end) Menampilkan list chat */}\n\n              </Col>\n              <Col sm={8} className=\"p-0\">\n\n                <Tab.Content>\n                  {/* (start) tampilan di box kanan sebelum klik chat */}\n                  <Tab.Pane eventKey=\"first\">\n                    <div className=\"connected-wa\">\n                      <img src={require(\"../images/whatsapp-icon-logo.png\")} alt=\"\" />\n                      <h1>Keep your phone connected</h1>\n                      <span>Whatsapp connect to your phone to sync messages. To reduce data usage, connect your phone to Wi-Fi</span>\n                    </div>\n                  </Tab.Pane>\n                  {/* (end) tampilan di box kanan sebelum klik chat */}\n\n                  {/* start loop tampilan chat */}\n                  {listAllMessage.map((item) => (\n                    <Fragment>\n                      {/* show tab chat */}\n                      <ShowTabChat\n                        changeInputMessage={this.props.changeInputMessage}\n                        postAfterSendMessage={this.postAfterSendMessage}\n                        item={item} />\n\n                    </Fragment>\n                  ))}\n                  {/* end loop tampilan chat */}\n                </Tab.Content>\n              </Col>\n            </Row>\n          </Tab.Container>\n        ) : (\n            <Redirect to={{ pathname: \"/login\" }} />\n          )}\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  dataUser: state.user,\n  listAllMessage: state.chat.listAllMessage,\n  listStatus: state.status.listStatus,\n  userStatus: state.status.userStatus,\n})\n\nconst mapDispatchToProps = {\n  sendMessage,\n  changeInputMessage,\n  deleteMessage,\n  getAllMessage,\n  getStatus,\n  doLogout,\n  getUserStatus\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React, { Component, Fragment } from \"react\"\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { doLogin, changeInputUser } from \"../store/action/user\";\nimport Button from 'react-bootstrap/Button'\n\nclass Login extends Component {\n  postLogin = async () => {\n    await this.props.doLogin()\n    if (localStorage.getItem(\"token\") !== null) {\n      this.props.history.push(\"/\")\n      // return <Redirect to=\"/\" />\n    }\n  }\n  render() {\n    return (\n      <Fragment>\n        {localStorage.getItem(\"token\") !== null ? (\n          <Redirect to={{ pathname: \"/\" }} />\n        ) : (\n            <div className=\"background\">\n              <div className=\"header-wa-web\">\n                <div style={{ padding: \"27px auto 28px\", margin: \"auto\", maxWidth: \"1000px\" }}>\n                  <img className=\"logo-wa-web\" src={require(\"../images/whatsapp-icon-logo.png\")} alt=\"\" />\n                  <span>WHATSAPP WEB</span>\n                </div>\n              </div>\n              <div className=\"window-wa-web container\">\n                <h1 style={{ textAlign: \"center\" }}>LOGIN</h1><br />\n                <Form onSubmit={(e) => e.preventDefault()}>\n                  <Form.Group as={Row} controlId=\"formPlaintextPhoneNumber\">\n                    <Col sm=\"1\"></Col>\n                    <Form.Label column sm=\"2\">Phone Number</Form.Label>\n                    <Col sm=\"8\">\n                      <Form.Control name=\"loginPhoneNumber\" type=\"text\" placeholder=\"Phone Number\" onChange={(e) => this.props.changeInputUser(e)} />\n                    </Col>\n                    <Col sm=\"1\"></Col>\n                  </Form.Group>\n                  <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                    <Col sm=\"1\"></Col>\n                    <Form.Label column sm=\"2\">Password</Form.Label>\n                    <Col sm=\"8\">\n                      <Form.Control name=\"loginPassword\" type=\"password\" placeholder=\"Password\" onChange={(e) => this.props.changeInputUser(e)} />\n                    </Col>\n                    <Col sm=\"1\"></Col>\n                  </Form.Group>\n                  <Button as=\"input\" type=\"submit\" value=\"Login\" onClick={() => this.postLogin()} />{' '}\n                </Form>\n                <div style={{ textAlign: \"center\" }}>\n                  <span>Don't have an account? <Link className=\"switch-link\" to=\"/register\">Click here!</Link></span>\n                </div>\n              </div>\n            </div>\n          )}\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  dataUser: state.user\n})\n\nconst mapDispatchToProps = {\n  changeInputUser,\n  doLogin\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { Component, Fragment } from \"react\"\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { changeInputUser, register } from \"../store/action/user\";\nimport { connect } from \"react-redux\";\nimport Button from 'react-bootstrap/Button'\n\nclass Register extends Component {\n  postRegister = async () => {\n    await this.props.register()\n    if (localStorage.getItem(\"token\") !== null) {\n      this.props.history.push(\"/\")\n    }\n  }\n  render() {\n    return (\n      <Fragment>\n        {localStorage.getItem(\"token\") !== null ? (\n          <Redirect to={{ pathname: \"/\" }} />\n        ) : (\n            <div className=\"background\">\n              <div className=\"header-wa-web\">\n                <div style={{ padding: \"27px auto 28px\", margin: \"auto\", maxWidth: \"1000px\" }}>\n                  <img className=\"logo-wa-web\" src={require(\"../images/whatsapp-icon-logo.png\")} alt=\"\" />\n                  <span>WHATSAPP WEB</span>\n                </div>\n              </div>\n              <div className=\"window-wa-web container\">\n                <h1 style={{ textAlign: \"center\" }}>REGISTER</h1><br />\n                <Form>\n                  <Form.Group as={Row} controlId=\"formPlaintextUsername\">\n                    <Col sm=\"1\"></Col>\n                    <Form.Label column sm=\"2\">Username</Form.Label>\n                    <Col sm=\"8\">\n                      <Form.Control name=\"registerUsername\" type=\"text\" placeholder=\"Username\" onChange={(e) => this.props.changeInputUser(e)} />\n                    </Col>\n                    <Col sm=\"1\"></Col>\n                  </Form.Group>\n                  <Form.Group as={Row} controlId=\"formPlaintextPhoneNumber\">\n                    <Col sm=\"1\"></Col>\n                    <Form.Label column sm=\"2\">Phone Number</Form.Label>\n                    <Col sm=\"8\">\n                      <Form.Control name=\"registerPhoneNumber\" type=\"text\" placeholder=\"Phone Number\" onChange={(e) => this.props.changeInputUser(e)} />\n                    </Col>\n                    <Col sm=\"1\"></Col>\n                  </Form.Group>\n                  <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                    <Col sm=\"1\"></Col>\n                    <Form.Label column sm=\"2\">Password</Form.Label>\n                    <Col sm=\"8\">\n                      <Form.Control name=\"registerPassword\" type=\"password\" placeholder=\"Password\" onChange={(e) => this.props.changeInputUser(e)} />\n                    </Col>\n                    <Col sm=\"1\"></Col>\n                  </Form.Group>\n                  <Button as=\"input\" type=\"submit\" value=\"Register\" onClick={() => this.postRegister()} />{' '}\n                </Form>\n                <div style={{ textAlign: \"center\" }}>\n                  <span>Have an account? <Link className=\"switch-link\" to=\"/login\">Click here!</Link></span>\n                </div>\n              </div>\n            </div>\n          )}\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  dataUser: state.user\n})\n\nconst mapDispatchToProps = {\n  changeInputUser,\n  register\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","const initialStateUser = {\n  token: \"\",\n  biodata: \"\",\n  isLogin: false\n}\n\nexport default function userReducer(userState = initialStateUser, action) {\n  switch (action.type) {\n    case \"CHANGE_INPUT_USER\":\n      return {\n        ...userState,\n        [action.payload.target.name]: action.payload.target.value\n      }\n    default:\n      return userState\n  }\n}","const initialChat = {\n  listAllMessage: []\n}\n\nexport default function chatReducer(chatState = initialChat, action) {\n  switch (action.type) {\n    case \"CHANGE_INPUT_MESSAGE\":\n      return {\n        ...chatState,\n        [action.payload.target.name]: action.payload.target.value\n      }\n    case \"GET_ALL_MESSAGE\":\n      return {\n        ...chatState,\n        listAllMessage: action.payload\n      }\n    default:\n      return chatState\n  }\n}","const initialStatus = {\n  listStatus: [],\n  userStatus: []\n}\n\nexport default function statusReducer(statusState = initialStatus, action) {\n  switch (action.type) {\n    case \"GET_STATUS\":\n      return {\n        ...statusState,\n        listStatus: action.payload\n      }\n    case \"GET_USER_STATUS\":\n      return {\n        ...statusState,\n        userStatus: action.payload\n      }\n    default:\n      return statusState\n  }\n}","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport userReducer from \"./reducer/user\";\nimport chatReducer from \"./reducer/chat\";\nimport statusReducer from \"./reducer/status\";\n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    chat: chatReducer,\n    status: statusReducer\n})\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\nstore.subscribe(() => console.warn(\"cek store\", store.getState()))\n\nexport default store","import React, { Component } from \"react\"\nimport { Provider } from \"react-redux\"\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\nimport Home from \"../pages/Home\";\nimport Login from \"../pages/Login\";\nimport Register from \"../pages/Register\";\nimport store from \"../store\";\n\nclass MainRoutes extends Component {\n  render() {\n    // const baseRoute = \"/WA-web-clone\"\n\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n          </Switch>\n        </BrowserRouter>\n      </Provider>\n    )\n  }\n}\n\nexport default MainRoutes;","import React from 'react';\nimport './App.css';\nimport MainRoutes from './routes/MainRoutes';\n\nfunction App() {\n  return (\n    <MainRoutes />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style/css/main.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/whatsapp-icon-logo.2b5545f8.png\";"],"sourceRoot":""}